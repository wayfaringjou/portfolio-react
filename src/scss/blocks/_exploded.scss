@use '../composition/breakpoints';

.exploded {
  position: relative;
  width: 100%;
  height: 100%;
  max-width: 600px;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-left: auto;
  margin-right: auto;
}

.exploded img {
  opacity: 95%;
  position: absolute;
  max-width: 100%;
  height: 100%;
  transition: all ease 500ms;
  transform-style: preserve-3d;
}

.exploded::before {
  content: '';
  position: absolute;
  top: 50%;
  bottom: 0;
  left: 50%;
  right: 0;
  width: min(520px, calc(100vw - 2rem));
  height: min(520px, calc(100vw - 2rem));
  border-radius: 50%;
  background-color: var(--clr-accent-400);
  transform: translate(-50%, -50%);
  transition: all ease 400ms;
  @include breakpoints.mq(md) {
    transform: translate(-25%, -50%);
  }
}

@mixin explode($x, $y, $z, $rotX, $rotY, $rotZ, $modX, $modY, $modZ, $layers) {
  .exploded img {
    transform: perspective(1200px) rotateX($rotX * 1deg) rotateY($rotY * 1deg)
      rotateZ($rotZ * 1deg) translateX($x * 1px) translateY($y * 1px)
      translateZ($z * 1px);
  }

  @for $i from 3 through $layers {
    $adjustedX: 0;
    $adjustedY: 0;
    $adjustedZ: 0;

    @if ($i % 2) == 0 {
      @if $modX > 0 {
        $adjustedX: $modX - 8;
      }
      @if $modY > 0 {
        $adjustedY: $modY - 8;
      }
      @if $modZ > 0 {
        $adjustedZ: $modZ - 8;
      }
    }

    .exploded :nth-child(#{$i}) {
      transform: perspective(1200px)
        rotateX($rotX * 1deg)
        rotateY($rotY * 1deg)
        rotateZ($rotZ * 1deg)
        translateX(($x + ($modX * $i) - $adjustedX) * 1px)
        translateY(($y + ($modY * $i) - $adjustedY) * 1px)
        translateZ(($z + ($modZ * $i) - $adjustedZ) * 1px);
    }
  }
}

@include explode(0, 0, 0, 20, 30, -10, 0, 0, 8, 6);

@include breakpoints.mq(sm) {
  @include explode(0, 0, 0, 20, 30, -10, 0, 0, 20, 6);
}

.exploded:hover img {
  transform: scale(1);
}
